# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python linter, test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  lint-pylint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Poetry Install
      # You may pin to the exact commit or the version.
      # uses: knowsuchagency/poetry-install@7ed80d49910319d3e14ac262a5c81f681de48de0
      uses: knowsuchagency/poetry-install@v2

    - name: Lint with pylint
      uses: gabriel-milan/action-pylint@v1
      with:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}} # GitHub token
        path: "pyncthing" # Glob pattern for files to lint

  lint-flake8:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Poetry Install
      # You may pin to the exact commit or the version.
      # uses: knowsuchagency/poetry-install@7ed80d49910319d3e14ac262a5c81f681de48de0
      uses: knowsuchagency/poetry-install@v2

    - name: Install flake8
      run: pip install flake8
    - uses: suo/flake8-github-action@releases/v1
      with:
        checkName: 'build'  # NOTE: this needs to be the same as the job name
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  lint-mypy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Poetry Install
      # You may pin to the exact commit or the version.
      # uses: knowsuchagency/poetry-install@7ed80d49910319d3e14ac262a5c81f681de48de0
      uses: knowsuchagency/poetry-install@v2

    - uses: jpetrucciani/mypy-check@master
      with:
        mypy_flags: --install-types --non-interactive

  lint-isort:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Poetry Install
      # You may pin to the exact commit or the version.
      # uses: knowsuchagency/poetry-install@7ed80d49910319d3e14ac262a5c81f681de48de0
      uses: knowsuchagency/poetry-install@v2

    - uses: isort/isort-action@v1

  lint-black:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Poetry Install
      # You may pin to the exact commit or the version.
      # uses: knowsuchagency/poetry-install@7ed80d49910319d3e14ac262a5c81f681de48de0
      uses: knowsuchagency/poetry-install@v2

    - uses: jpetrucciani/black-check@master

  # pytest:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Set up Python
  #     uses: actions/setup-python@v3
  #     with:
  #       python-version: "3.10"
  #   - name: Poetry Install
  #     # You may pin to the exact commit or the version.
  #     # uses: knowsuchagency/poetry-install@7ed80d49910319d3e14ac262a5c81f681de48de0
  #     uses: knowsuchagency/poetry-install@v2

  #   - name: Install pytest
  #     run: pip install pytest
  #   - run: |
  #       pytest
